---
import PageLayout from "../../layouts/PageLayout.astro"
import PageMeta from "../../components/PageMeta.astro"
import { SITE_TITLE } from "../../config"

export const prerender = true
---

<PageLayout>
  <PageMeta title={`${SITE_TITLE}`} slot="meta" />
  <section slot="main" class="grid gap-5">
    <div id="experience">
      <h1><b>Professional Experience</b></h1>

      <div id="experience-content" class="grid gap-4">
        <section>
          <div class="flex justify-between">
            <h2>
              <a href="https://www.rockstargames.com/" target="_blank">Rockstar North</a>
            </h2>
            <b>Role: Systems Designer</b>
            <small>2020 - 2024</small>
          </div>
          <div>
            <p class="mb-3">
              Designed and implemented player-facing systems and liased with 
              engine programmers / pen and paper designers and production to create ergonomic and scalable 
              systems that allowed content to be developed at a rapid pace, 
              while maintaining a high level of quality
            </p>
          </div>
          <div>
            <h2>Responsibilities / Key Experiences</h2>
            <ul>
              <li>
                <b>Performance analysis / Optimisation</b>
                <br/>
                Maintained systems that were crucial in enabling the team to reach a tight performance goal and reduce the need for polling functions each frame. 
                Performed many optimisation passes / provided detailed analysis on the results of these optimisations which informed senior members of the design team 
                what areas of our code needed to be improved / required further optimisation.
              </li>
              <li>
                <b>Architectural Design Patterns</b>
                <br/>
                When working with thousands of other engineers, a major concern of your code is not only its performance, but maintainability and readability. Many of the 
                systems I developed were foundational systems built atop by other systems designers, and as such, extreme care had to be taken when making changes to the API of 
                the system, or when the underlying implementation changed in a way that could not be represented through the service API. Having to deal with these concerns on a regular basis 
                has greatly influenced the way that I architect my code, not only through daily use of some well known design patterns (factory, dependency injection, wrapper, proxies etc.) but in considering modularity 
                and points of failure at the very beginning of the design process, allowing for systems / APIs to grow flexibly, without causing pain to dependents. 
              </li>
              <li>
                <b>Code Quality Automation</b>
                <br/>
                Maintained a tool that periodically performed analysis on our code projects and automated the creation of tickets / bugs to the appropriate owner of the code. This included warnings generated by the compiler, but could also handle input 
                from additional sources, such as third party static analysers (such as ReSharper), which gave us a reasonable approximation of good quality across the various projects we maintained. This experience was quite far removed from the other game development
                work I performed at Rockstar, but was a great experience for topics which do not appear as frequently during game developmen, such as string comprehension, text-file parsing and <i>very</i> light semantic analysis.
              </li>
              <li>
                <b>Soft Skills</b>
                <br/>
                Being a part of a large team requires a shift in attitude when compared to working in a smaller group or as a solo developer. Among the most important skills I developed was the ability to communicate the intent of a design, 
                without necessarily getting in to deep technical conversations about implementation details. Furthermore, during several periods throughout development, we were required to push hard to get specific areas of our work polished to a 
                high standard. This often meant jumping in to areas of code that myself and other members of my team were not familiar with or had little experience in, which was a fantastic learning opportunity. 
                <br/>
                Furthermore, after my promotion to mid-level Systems Designer, we were tasked with scheduling and prioritising incoming work, which would then be confirmed by our lead. Being in a position where I had to make calls on
                work I would be undertaking in a given period was an excellent way to get a better high level view of the progress of the project, and how my work impacted progress. 
              </li>
            </ul>
          </div>
        </section>
        <section>
          <div class="flex justify-between">
            <h2>
              <a href="https://www.rockstargames.com/" target="_blank">Motorola Solutions</a>
            </h2>
            <b>Role: Application Developer</b>
            <small>2019 - 2020</small>
          </div>
          <div>
            <p class="mb-3">
              Maintained Pronto software for Police Scotland, implemented an integration between Pronto and a third party vehicle accidents service.
            </p>
          </div>
          <div>
            <h2>Responsibilities / Key Experiences</h2>
            <ul>
              <li>
                <b>Maintaining Legacy Code</b>
                <br/>
                Pronto has been in use by Police Scotland for many years, and as it has become part of their daily tools, 
                changes to the design in the software are rare and unwanted. We mainted the software using Java and deployed updates to Police Scotland every month. 
                When we would receive feature requests, we had to practice caution ensuring that the change needed would not require additional dependencies, causing issues on officers with older devices, 
                but also not going too far in to "hacking" in a solution with the existing tools at our disposal. Thankfully, we did perform automated and manual testing on the app to ensure no regressions were made release to release.
              </li>
              <li>
                <b>Automated Test Development</b>
                <br/>
                To ensure that the mission critical software we developed was ready to be deployed to officers, we employed a mixture of automated testing and manual regression testing. Where possible, laborious testing was 
                automated with a DSL developed in house at Motorola Solutions, and for more intricate and difficult to test bugs, we would manually perform these test scenarios as a team. 
              </li>
            </ul>
          </div>
        </section>
      </div>

      <br/>
      <br/>

      <h1><b>Education</b></h1>
      <div id="education-content" class="grid gap-4">
        <section>
          <h3><i>Master of Science with Distinction (MSc)</i></h3>
          <div class="flex justify-between">
            <h2>Advanced Computer Science</h2>
            <small>2018 - 2019</small>
          </div>
          <small>University of Strathclyde</small>
          <ul>
            <li>Trained a wide variety of AI / ML algorithms to perform tasks across various domains,
              including:<ul>
                <li>MNIST handwritten character recognition using a convolutional neural network.<li/>
                <li>Automated stock market trading using a genetic algorithm.</li>
                <li>Masters project on music generation using a recurrent neural network.</li>
              </ul>
            </li>
            <li>Introduced to a wide variety of software architecture and design patterns that would go on to be used in both personal and professional experiences, examples include Proxies, Factories, Dependency Injection, Handles, Wrappers etc.</li>
            <li>Wrote a parser for java which could detect bad practice ("code smells") and report these warnings to the user.</li>
          </ul>
        </section>
        <div id="education-content" class="grid gap-4">
          <section>
            <h3><i>First Class Honours (BSc)</i></h3>
            <div class="flex justify-between">
              <h2>Audio Technology & Multimedia</h2>
              <small>2013 - 2017</small>
            </div>
            <small>Glasgow Caledonian University</small>
            <ul>
              <li>Developed a system in Unity that procedurally generated an environment and soundscape using procedural content generation.</li>
              <li>Developed a simple game with a complex soundscape using FMOD.</li>
              <li>Developed a C++ VST Plugin using the JUCE framework.</li>
              <li>Signal analysis and synthesis using Max MSP visual scripting framework.</li>
            </ul>
                
          </section>
      </div>

      </div>
    </div>
  </section>
</PageLayout>

<style>
  h1 {
    font-size: 1.25rem;
  }
  li,
  p {
    font-size: 0.85rem;
  }
</style>
